// generated by Fast Light User Interface Designer (fluid) version 1.0105

#ifndef gui_h
#define gui_h
#include <FL/Fl.H>
#include <cstdlib>
#include <cstdio>
#include <cstring>
#include <list>
#include <FL/fl_ask.H>
#include <FL/Fl_Color_Chooser.H>
#include <FL/Fl_File_Chooser.H>
#include "life.h"
#include "ekosystem.h"
#include "widok.h"
extern Fl_Font PL_Font;
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Menu_Bar.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Round_Button.H>
#include <FL/Fl_Choice.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_Browser.H>
#include <FL/Fl_Output.H>
#include <FL/Fl_Value_Input.H>
#include <FL/Fl_Value_Output.H>
#include <FL/Fl_Input.H>
#include <FL/Fl_File_Input.H>

class UserInterface {
  bool playing;
public:
  UserInterface();
  Fl_Double_Window *okno1;
  Fl_Menu_Bar *menu_glowne;
  static Fl_Menu_Item menu_menu_glowne[];
private:
  inline void cb_Nowy_i(Fl_Menu_*, void*);
  static void cb_Nowy(Fl_Menu_*, void*);
  inline void cb_Zapisz_i(Fl_Menu_*, void*);
  static void cb_Zapisz(Fl_Menu_*, void*);
  inline void cb_Wczytaj_i(Fl_Menu_*, void*);
  static void cb_Wczytaj(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *zamknij;
private:
  inline void cb_zamknij_i(Fl_Menu_*, void*);
  static void cb_zamknij(Fl_Menu_*, void*);
  inline void cb_Koniec_i(Fl_Menu_*, void*);
  static void cb_Koniec(Fl_Menu_*, void*);
  inline void cb_Usmierc_i(Fl_Menu_*, void*);
  static void cb_Usmierc(Fl_Menu_*, void*);
  inline void cb_Przeszukaj_i(Fl_Menu_*, void*);
  static void cb_Przeszukaj(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menu_ukladow;
private:
  inline void cb_Zapisz1_i(Fl_Menu_*, void*);
  static void cb_Zapisz1(Fl_Menu_*, void*);
  inline void cb_Powstawanie_i(Fl_Menu_*, void*);
  static void cb_Powstawanie(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menuitem_Stany;
private:
  inline void cb_menuitem_Stany_i(Fl_Menu_*, void*);
  static void cb_menuitem_Stany(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menuitem_Rodzaje;
private:
  inline void cb_menuitem_Rodzaje_i(Fl_Menu_*, void*);
  static void cb_menuitem_Rodzaje(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menuitem_Warunki;
private:
  inline void cb_menuitem_Warunki_i(Fl_Menu_*, void*);
  static void cb_menuitem_Warunki(Fl_Menu_*, void*);
  inline void cb_Powieksz_i(Fl_Menu_*, void*);
  static void cb_Powieksz(Fl_Menu_*, void*);
  inline void cb_Pomniejsz_i(Fl_Menu_*, void*);
  static void cb_Pomniejsz(Fl_Menu_*, void*);
  inline void cb_Przywr_i(Fl_Menu_*, void*);
  static void cb_Przywr(Fl_Menu_*, void*);
  inline void cb_O_i(Fl_Menu_*, void*);
  static void cb_O(Fl_Menu_*, void*);
  inline void cb__i(Fl_Button*, void*);
  static void cb_(Fl_Button*, void*);
  inline void cb_1_i(Fl_Button*, void*);
  static void cb_1(Fl_Button*, void*);
  inline void cb_2_i(Fl_Button*, void*);
  static void cb_2(Fl_Button*, void*);
  inline void cb_line_i(Fl_Button*, void*);
  static void cb_line(Fl_Button*, void*);
  inline void cb_8_i(Fl_Button*, void*);
  static void cb_8(Fl_Button*, void*);
  inline void cb_21_i(Fl_Button*, void*);
  static void cb_21(Fl_Button*, void*);
  Fl_Group *panel;
public:
  Fl_Round_Button *panel_Stany;
private:
  inline void cb_panel_Stany_i(Fl_Round_Button*, void*);
  static void cb_panel_Stany(Fl_Round_Button*, void*);
public:
  Fl_Round_Button *panel_Rodzaje;
private:
  inline void cb_panel_Rodzaje_i(Fl_Round_Button*, void*);
  static void cb_panel_Rodzaje(Fl_Round_Button*, void*);
public:
  Fl_Round_Button *panel_Warunki;
private:
  inline void cb_panel_Warunki_i(Fl_Round_Button*, void*);
  static void cb_panel_Warunki(Fl_Round_Button*, void*);
public:
  Fl_Choice *lista_wyboru;
private:
  inline void cb_9square_i(Fl_Button*, void*);
  static void cb_9square(Fl_Button*, void*);
  inline void cb_1square_i(Fl_Button*, void*);
  static void cb_1square(Fl_Button*, void*);
  inline void cb_9square1_i(Fl_Button*, void*);
  static void cb_9square1(Fl_Button*, void*);
  inline void cb_11_i(Fl_Button*, void*);
  static void cb_11(Fl_Button*, void*);
  inline void cb_5_i(Fl_Button*, void*);
  static void cb_5(Fl_Button*, void*);
  inline void cb_10_i(Fl_Button*, void*);
  static void cb_10(Fl_Button*, void*);
  inline void cb_Stany_i(Fl_Button*, void*);
  static void cb_Stany(Fl_Button*, void*);
  inline void cb_Rodzaje_i(Fl_Button*, void*);
  static void cb_Rodzaje(Fl_Button*, void*);
  inline void cb_Warunki_i(Fl_Button*, void*);
  static void cb_Warunki(Fl_Button*, void*);
public:
  Fl_Button *play;
private:
  inline void cb_play_i(Fl_Button*, void*);
  static void cb_play(Fl_Button*, void*);
public:
  Widok *Widok1;
  Fl_Double_Window *okienko_warunkow;
  Fl_Browser *lista_warunkow;
private:
  inline void cb_lista_warunkow_i(Fl_Browser*, void*);
  static void cb_lista_warunkow(Fl_Browser*, void*);
public:
  Fl_Group *edycja_warunkow_grp;
  Fl_Output *nazwa_warunkow;
  Fl_Value_Input *w_input;
private:
  inline void cb_w_input_i(Fl_Value_Input*, void*);
  static void cb_w_input(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *o_input;
private:
  inline void cb_o_input_i(Fl_Value_Input*, void*);
  static void cb_o_input(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *t_input;
private:
  inline void cb_t_input_i(Fl_Value_Input*, void*);
  static void cb_t_input(Fl_Value_Input*, void*);
public:
  Fl_Button *kolor_warunkow;
private:
  inline void cb_kolor_warunkow_i(Fl_Button*, void*);
  static void cb_kolor_warunkow(Fl_Button*, void*);
  inline void cb_OK_i(Fl_Button*, void*);
  static void cb_OK(Fl_Button*, void*);
  inline void cb_Dodaj_i(Fl_Button*, void*);
  static void cb_Dodaj(Fl_Button*, void*);
  inline void cb_Usun_i(Fl_Button*, void*);
  static void cb_Usun(Fl_Button*, void*);
public:
  Fl_Double_Window *okienko_stanow;
  Fl_Browser *lista_stanow;
private:
  inline void cb_lista_stanow_i(Fl_Browser*, void*);
  static void cb_lista_stanow(Fl_Browser*, void*);
public:
  Fl_Group *edycja_stanow_grp;
  Fl_Value_Output *numer_stanu;
  Fl_Input *nazwa_stanu;
private:
  inline void cb_nazwa_stanu_i(Fl_Input*, void*);
  static void cb_nazwa_stanu(Fl_Input*, void*);
public:
  Fl_Button *kolor_stanu;
private:
  inline void cb_kolor_stanu_i(Fl_Button*, void*);
  static void cb_kolor_stanu(Fl_Button*, void*);
  inline void cb_Dodaj1_i(Fl_Button*, void*);
  static void cb_Dodaj1(Fl_Button*, void*);
  inline void cb_Usun1_i(Fl_Button*, void*);
  static void cb_Usun1(Fl_Button*, void*);
  inline void cb_OK1_i(Fl_Button*, void*);
  static void cb_OK1(Fl_Button*, void*);
public:
  Fl_Double_Window *okienko_rodzajow;
  Fl_Group *edycja_rodzaju_grp;
  Fl_Value_Output *numer_rodzaju;
  Fl_Input *nazwa_rodzaju;
private:
  inline void cb_nazwa_rodzaju_i(Fl_Input*, void*);
  static void cb_nazwa_rodzaju(Fl_Input*, void*);
  inline void cb_3_i(Fl_Button*, void*);
  static void cb_3(Fl_Button*, void*);
public:
  Fl_File_Input *modul_rodzaju;
private:
  inline void cb_modul_rodzaju_i(Fl_File_Input*, void*);
  static void cb_modul_rodzaju(Fl_File_Input*, void*);
public:
  Fl_Button *kolor_rodzaju;
private:
  inline void cb_kolor_rodzaju_i(Fl_Button*, void*);
  static void cb_kolor_rodzaju(Fl_Button*, void*);
public:
  Fl_Browser *lista_rodzajow;
private:
  inline void cb_lista_rodzajow_i(Fl_Browser*, void*);
  static void cb_lista_rodzajow(Fl_Browser*, void*);
  inline void cb_Dodaj2_i(Fl_Button*, void*);
  static void cb_Dodaj2(Fl_Button*, void*);
  inline void cb_OK2_i(Fl_Button*, void*);
  static void cb_OK2(Fl_Button*, void*);
public:
  Fl_Double_Window *about;
private:
  inline void cb_ok_i(Fl_Button*, void*);
  static void cb_ok(Fl_Button*, void*);
public:
  void Uaktualnij_Liste_Wyboru();
  void Uaktualnij_Menu_Ukladow();
  void Wybierz_Widok_Warunki();
  void Wybierz_Widok_Rodzaje();
  void Wybierz_Widok_Stany();
  static void cb_Wczytaj_Uklad_static(Fl_Widget *o, void *v);
  void Wczytaj_Uklad(const char *nazwa);
};
#endif
